{"version":3,"sources":["components/TableDevices.js","components/PieGraph.js","components/RoomsDetail.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["TableDevices","room","Table","striped","bordered","hover","id","devices","map","d","index","name","desired","value","toString","PieGraph","rooms","pieChart","useRef","useEffect","piedata","d3","powerUsage","arc","innerRadius","outerRadius","colors","svg","current","attr","append","tooldiv","style","selectAll","data","join","i","on","e","text","pageY","pageX","textAlign","ref","RoomsDetail","useState","setRooms","selectedRoom","setSelectedRoom","navigator","onLine","fetch","then","res","json","localStorage","setItem","JSON","stringify","cuartosEspacio","filter","homeId","parse","getItem","handleImage","includes","Container","Row","className","Col","length","Card","onClick","width","Img","variant","src","alt","title","Body","Title","App","espacio","setClicked","espacios","setEspacios","spaces","space","img","Text","address","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","getBrowserLanguage","language","userLanguage","ReactDOM","render","StrictMode","locale","substring","messages","localeEsMessages","localeEnMessages","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.a11c89ba.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nfunction TableDevices({ room }) {\r\n  return (\r\n    <>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>ID</th>\r\n            <th>\r\n              <FormattedMessage id=\"Device\" />\r\n            </th>\r\n            <th>\r\n              <FormattedMessage id=\"Value\" />\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {room.devices.map((d, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td>{d.id}</td>\r\n                <td>{d.name}</td>\r\n                <td>{d.desired.value.toString()}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TableDevices;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst PieGraph = ({ rooms }) => {\r\n  const pieChart = useRef();\r\n\r\n  useEffect(() => {\r\n    // Get positions for each data object\r\n    const piedata = d3.pie().value((d) => d.powerUsage.value)(rooms);\r\n    // Define arcs for graphing\r\n    const arc = d3.arc().innerRadius(0).outerRadius(200);\r\n\r\n    const colors = d3.scaleOrdinal([\r\n      \"#ffa822\",\r\n      \"#134e6f\",\r\n      \"#ff6150\",\r\n      \"#1ac0c6\",\r\n      \"#dee0e6\",\r\n    ]);\r\n\r\n    // Define the size and position of svg\r\n    const svg = d3\r\n      .select(pieChart.current)\r\n      .attr(\"width\", 600)\r\n      .attr(\"height\", 600)\r\n      // .style('background-color','yellow')\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(300,300)\");\r\n\r\n    // Add tooltip\r\n    const tooldiv = d3\r\n      .select(\"#chartArea\")\r\n      .append(\"div\")\r\n      .style(\"visibility\", \"hidden\")\r\n      .style(\"position\", \"absolute\")\r\n      .style(\"background-color\", \"red\");\r\n\r\n    // Draw pie\r\n    svg\r\n      .append(\"g\")\r\n      .selectAll(\"path\")\r\n      .data(piedata)\r\n      .join(\"path\")\r\n      .attr(\"d\", arc)\r\n      .attr(\"fill\", (d, i) => colors(i))\r\n      .attr(\"stroke\", \"white\")\r\n      .on(\"mouseover\", (e, d) => {\r\n        tooldiv\r\n          .style(\"visibility\", \"visible\")\r\n          .text(`${d.data.name}: ${d.value} KwH`);\r\n      })\r\n      .on(\"mousemove\", (e, d) => {\r\n        tooldiv\r\n          .style(\"top\", e.pageY - 50 + \"px\")\r\n          .style(\"left\", e.pageX - 50 + \"px\");\r\n      })\r\n      .on(\"mouseout\", () => {\r\n        tooldiv.style(\"visibility\", \"hidden\");\r\n      });\r\n  });\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }} id=\"chartArea\">\r\n      <h4 style={{ textAlign: \"center\" }}>\r\n        <FormattedMessage id=\"Power\" />\r\n      </h4>\r\n      <svg ref={pieChart}></svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieGraph;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./RoomsDetail.css\";\r\nimport { Card, Row, Col, Container } from \"react-bootstrap\";\r\nimport TableDevices from \"./TableDevices\";\r\nimport PieGraph from \"./PieGraph\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nconst RoomsDetail = ({ id }) => {\r\n  const urlSala =\r\n    \"http://loredomuebles.com/wp-content/uploads/2017/03/Sala-de-estar-1080x675.jpg\";\r\n  const urlCocina =\r\n    \"https://wwwhatsnew.com/wp-content/uploads/2019/09/La-cocina_Un-%C3%A1rea-de-la-casa-en-peligro-de-extinci%C3%B3n-1.jpg\";\r\n  const urlComedor =\r\n    \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/dining-room-ideas-1252-005-1621977481.jpg\";\r\n  const urlRooms =\r\n    \"https://gist.githubusercontent.com/josejbocanegra/92c90d5f2171739bd4a76d639f1271ea/raw/9effd124c825f7c2a7087d4a50fa4a91c5d34558/rooms.json\";\r\n\r\n  const [rooms, setRooms] = useState([]);\r\n  const [selectedRoom, setSelectedRoom] = useState();\r\n  useEffect(() => {\r\n    if (navigator.onLine) {\r\n      fetch(urlRooms)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          localStorage.setItem(\"rooms\", JSON.stringify(data));\r\n          let cuartosEspacio = data.filter((d) => d.homeId === id);\r\n          setRooms(cuartosEspacio);\r\n        });\r\n    } else {\r\n      let rooms = JSON.parse(localStorage.getItem(\"rooms\"));\r\n      if (rooms !== null) {\r\n        let cuartosEspacio = rooms.filter((d) => d.homeId === id);\r\n        setRooms(cuartosEspacio);\r\n      }\r\n    }\r\n  }, [id]);\r\n\r\n  const handleImage = (room) => {\r\n    if (room.name.includes(\"Kit\")) {\r\n      return urlCocina;\r\n    } else if (room.name.includes(\"Living\")) {\r\n      return urlSala;\r\n    } else {\r\n      return urlComedor;\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <h1 className=\"header\">\r\n          <FormattedMessage id=\"MyRooms\" />\r\n        </h1>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Row>\r\n            {rooms &&\r\n              rooms.length &&\r\n              rooms.map((room) => {\r\n                return (\r\n                  <Col key={room.name + room.homeId}>\r\n                    <Card\r\n                      onClick={() => setSelectedRoom(room)}\r\n                      style={{ width: \"18rem\" }}\r\n                    >\r\n                      <Card.Img\r\n                        variant=\"top\"\r\n                        src={handleImage(room)}\r\n                        alt={room.title}\r\n                      />\r\n                      <Card.Body>\r\n                        <Card.Title>{room.name}</Card.Title>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                );\r\n              })}\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          {selectedRoom != null ? <TableDevices room={selectedRoom} /> : null}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <h1 className=\"header\">\r\n          <FormattedMessage id=\"Stats\" />\r\n        </h1>\r\n      </Row>\r\n      <Row>\r\n        <PieGraph rooms={rooms} />\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RoomsDetail;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Card, Container, Row } from \"react-bootstrap\";\nimport { FormattedMessage } from \"react-intl\";\nimport \"./App.css\";\nimport RoomsDetail from \"./components/RoomsDetail\";\nfunction App() {\n  const [espacio, setClicked] = useState();\n  const [espacios, setEspacios] = useState();\n  const url =\n    \"https://gist.githubusercontent.com/josejbocanegra/0067d2b28b009140fee423cfc84e40e6/raw/6e6b11160fbcacb56621b6422684d615dc3a0d33/spaces.json\";\n  const urlRooms =\n    \"https://gist.githubusercontent.com/josejbocanegra/92c90d5f2171739bd4a76d639f1271ea/raw/9effd124c825f7c2a7087d4a50fa4a91c5d34558/rooms.json\";\n\n  useEffect(() => {\n    if (navigator.onLine) {\n      fetch(url)\n        .then((res) => res.json())\n        .then((res) => {\n          setEspacios(res);\n          localStorage.setItem(\"spaces\", JSON.stringify(res));\n        });\n      fetch(urlRooms)\n        .then((res) => res.json())\n        .then((res) => {\n          localStorage.setItem(\"rooms\", JSON.stringify(res));\n        });\n    } else {\n      let spaces = JSON.parse(localStorage.getItem(\"spaces\"));\n      if (spaces !== null) {\n        setEspacios(spaces);\n      }\n    }\n  }, []);\n  return (\n    <Container>\n      <Row>\n        <h1 className=\"header\">\n          <FormattedMessage id=\"MySpaces\" />\n        </h1>\n      </Row>\n      <Row className=\"flex-row\">\n        {espacios &&\n          espacios.length &&\n          espacios.map((space) => {\n            if (space.name.includes(\"Casa\")) {\n              space.img = \"https://i.imgur.com/W26HJoz.jpg\";\n            } else {\n              space.img =\n                \"https://amarilo.com.co/sites/default/files/fachada_interior_salamanca_1111x750p.jpg\";\n            }\n            return (\n              <Card\n                key={space.name}\n                onClick={() => setClicked(space)}\n                style={{ width: \"18rem\" }}\n              >\n                <Card.Img variant=\"top\" src={space.img} alt={space.title} />\n                <Card.Body>\n                  <Card.Title>{space.name}</Card.Title>\n                  <Card.Text>{space.address}</Card.Text>\n                </Card.Body>\n              </Card>\n            );\n          })}\n      </Row>\n      <Row>\n        {espacio != null ? <RoomsDetail key={espacio} id={espacio.id} /> : null}\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { IntlProvider } from \"react-intl\";\nimport localeEsMessages from \"./locales/es\";\nimport localeEnMessages from \"./locales/en\";\n\nfunction getBrowserLanguage() {\n  return navigator.language || navigator.userLanguage;\n}\nfunction language() {\n  if (getBrowserLanguage().substring(0, 2) === \"es\") {\n    return localeEsMessages;\n  } else if (getBrowserLanguage().substring(0, 2) === \"en\") {\n    return localeEnMessages;\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider\n      locale={getBrowserLanguage().substring(0, 2)}\n      messages={language()}\n    >\n      <App />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}